/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "./environments";
import * as core from "./core";
import { Health } from "./api/resources/health/client/Client";
import { Link } from "./api/resources/link/client/Client";
import { Transcribe } from "./api/resources/transcribe/client/Client";
import { Usage } from "./api/resources/usage/client/Client";
export declare namespace SoferaiApiClient {
    interface Options {
        environment?: core.Supplier<environments.SoferaiApiEnvironment | string>;
        apiKey?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
    }
}
export declare class SoferaiApiClient {
    protected readonly _options: SoferaiApiClient.Options;
    constructor(_options?: SoferaiApiClient.Options);
    protected _health: Health | undefined;
    get health(): Health;
    protected _link: Link | undefined;
    get link(): Link;
    protected _transcribe: Transcribe | undefined;
    get transcribe(): Transcribe;
    protected _usage: Usage | undefined;
    get usage(): Usage;
}
