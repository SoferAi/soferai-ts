/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SoferAI from "../../../../api/index";
import * as core from "../../../../core";
import { TranscriptionId } from "./TranscriptionId";
import { Language } from "./Language";
import { Status } from "./Status";

export const TranscriptionInfo: core.serialization.ObjectSchema<
    serializers.TranscriptionInfo.Raw,
    SoferAI.TranscriptionInfo
> = core.serialization.object({
    id: TranscriptionId.optional(),
    userId: core.serialization.property("user_id", core.serialization.string().optional()),
    title: core.serialization.string().optional(),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    primaryLanguage: core.serialization.property("primary_language", Language.optional()),
    langForHebrewWords: core.serialization.property(
        "lang_for_hebrew_words",
        core.serialization.list(Language).optional()
    ),
    numSpeakers: core.serialization.property("num_speakers", core.serialization.number().optional()),
    status: Status.optional(),
    duration: core.serialization.number().optional(),
});

export declare namespace TranscriptionInfo {
    interface Raw {
        id?: TranscriptionId.Raw | null;
        user_id?: string | null;
        title?: string | null;
        created_at?: string | null;
        primary_language?: Language.Raw | null;
        lang_for_hebrew_words?: Language.Raw[] | null;
        num_speakers?: number | null;
        status?: Status.Raw | null;
        duration?: number | null;
    }
}
